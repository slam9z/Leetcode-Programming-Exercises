import com.mchange.v2.c3p0.ComboPooledDataSource;


import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import java.math.*;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.regex.Pattern;
import com.mysql.jdbc.Driver;
import java.beans.PropertyVetoException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;



public class Main {

    public static void main(String[] args) throws IOException, ParseException {


        int[] numtmp = new int[]{1,1,3};

        int[] other = new int[]{1,1,3};
        System.out.println(other.equals(numtmp));

        boolean dfd = false;
        boolean sdfwe = !dfd;
        System.out.println(sdfwe + "     sdfdsf");


        String mytime = new SimpleDateFormat("HH:mm:ss").format(new Date());
        String btime ="14:18:00, 06-30-17";
        DateFormat df = new SimpleDateFormat("HH:mm:ss, MM-dd-yy");
        System.out.println(mytime);

        int inmin = Integer.MIN_VALUE;
        System.out.println(Math.abs(inmin));

        //Date now = df.parse(mytime);
        Date now = new Date();

        BigInteger nn = new BigInteger("0");
        long aadd  = 0;

        Date compare = df.parse(btime);
        System.out.println(compare);
        double min_interval = (compare.getTime()-now.getTime());// / (1000.0 * 60.0);
        System.out.println(min_interval);
        System.out.println("Time");

        int k =3;String num = "1432219";
        StringBuffer str = new StringBuffer(num);
        StringBuffer ans = new StringBuffer();






        int min =0;
        while(k < str.length() && k>0 ){
            int tmp = min;
            for(int i=tmp + 1; i<=tmp + k; i++){
                System.out.println(""+i+" "+k+" "+min);
                if(str.charAt(i)<str.charAt(min)){
                    min = i;
                }
            }

            for(int i=tmp; i<min;i++){
                str.deleteCharAt(tmp);
                k--;
                min--;
            }
            min ++;
            System.out.println(""+min+" "+str.toString()+" "+k);
            if(min == str.length() - k){
                while(k>0){
                    str.deleteCharAt(str.length() - 1);
                    k--;
                }
            }

        }


        System.out.println(str.toString());

        int a = 2, b=6;

        a^=b;
        b^=a;
        a^=b;

        int dd,ee;


        Deque<String> destr = new LinkedList<>();




        String sssd= "d//s/d";
        String ssew = "   +23   ";

        ssew = ssew.replace(" ","");
        int yew = Integer.parseInt(ssew);
        System.out.println(yew);
        StringBuffer s22 = new StringBuffer('[');




        String[] strddd=sssd.split("/");
        for(int i=0; i<strddd.length; i++)
            System.out.println(i+"  "+strddd[i]);


        System.out.println(s22.toString());


        int[] numsddd={1,2,3,4,5,6};
        int[] nums=new int[]{1,2,3,4,5,6};
        System.out.println(nums);
        char[] numsd=new char[]{'1','2','3','4','5','6'};
        System.out.println(numsd);

        String s1="sd3";
        String s2="sd"+s1.length();
        System.out.println(s1==s2);
        System.out.println(s1.equals(s2));



        System.out.print("2 + 2 = " + (2+2)+"\n");

        char x = 'X';
        int iii = 0;
        System.out.println(true ? x : 0);
        System.out.println(false ? iii : x);


        System.out.println(
                Long.toHexString(0x100000000L + 0xcafebabe));
        System.out.println(
                Long.toHexString(0x100000000L + 0xcafebabeL));


        /*long 类型计算的时候要确保每个都是long类型*/
        final long MICROS_PER_DAY = 24 * 60 * 60 * 1000 * 1000;
        final long MILLIS_PER_DAY = 24L * 60 * 60 * 1000 * 1000;
        System.out.println(MICROS_PER_DAY);
        System.out.println(MILLIS_PER_DAY);


        System.out.println(a+" "+b);
        System.out.println(2.00-1.10);
        System.out.printf("%.2f%n",2.00 - 1.10);
        System.out.println(new BigDecimal("2.00").subtract(new BigDecimal("1.10")));
        System.out.println(new BigDecimal(2.00).subtract(new BigDecimal(1.10)));



        for(int i=-20,j=3;i<20;i++){
            System.out.print(  (i%3) + "  ");
        }
        System.out.println();


        for(int i=-20;i<20;i++){
            System.out.print(  (i&1) + "  ");
        }
        System.out.println();
        for(int i=-20;i<20;i++){
            System.out.print(  (i%2) + "  ");
        }
        System.out.println();

        String hh = "Hello ";


        String photo = "-1,-40,-1,-32,0,16,74,70,73,70,0,1,1,1,0,0,0,0,0,0,-1,-37,0,67,0,12,8,9,11,9,8,12,11,10,11,14,13,12,14,18,30,20,18,17,17,18,37,26,28,22,30,44,38,46,45,43,38,42,41,48,54,69,59,48,51,65,52,41,42,60,82,61,65,71,74,77,78,77,47,58,85,91,84,75,90,69,76,77,74,-1,-37,0,67,1,13,14,14,18,16,18,35,20,20,35,74,50,42,50,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-1,-60,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,-1,-60,0,-75,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,-127,-111,-95,8,35,66,-79,-63,21,82,-47,-16,36,51,98,114,-126,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,-125,-124,-123,-122,-121,-120,-119,-118,-110,-109,-108,-107,-106,-105,-104,-103,-102,-94,-93,-92,-91,-90,-89,-88,-87,-86,-78,-77,-76,-75,-74,-73,-72,-71,-70,-62,-61,-60,-59,-58,-57,-56,-55,-54,-46,-45,-44,-43,-42,-41,-40,-39,-38,-31,-30,-29,-28,-27,-26,-25,-24,-23,-22,-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-1,-60,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,-1,-60,0,-75,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,-127,8,20,66,-111,-95,-79,-63,9,35,51,82,-16,21,98,114,-47,10,22,36,52,-31,37,-15,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,-126,-125,-124,-123,-122,-121,-120,-119,-118,-110,-109,-108,-107,-106,-105,-104,-103,-102,-94,-93,-92,-91,-90,-89,-88,-87,-86,-78,-77,-76,-75,-74,-73,-72,-71,-70,-62,-61,-60,-59,-58,-57,-56,-55,-54,-46,-45,-44,-43,-42,-41,-40,-39,-38,-30,-29,-28,-27,-26,-25,-24,-23,-22,-14,-13,-12,-11,-10,-9,-8,-7,-6,-1,-64,0,17,8,0,-16,1,64,3,1,33,0,2,17,1,3,17,1,-1,-38,0,12,3,1,0,2,17,3,17,0,63,0,118,105,55,87,-53,92,-10,-56,-34,-85,-73,20,20,-122,121,-108,9,106,-118,30,37,-89,-119,106,68,63,-52,-89,-84,-108,-55,30,36,-89,-121,-96,67,-61,-45,-124,-116,58,26,0,-75,14,-89,60,93,-21,74,13,114,90,-106,-82,46,84,94,-113,89,-112,-43,-127,-85,73,-23,81,-56,103,-55,17,63,-75,-92,-12,-88,36,-42,102,-20,41,114,13,83,-119,70,109,74,-30,78,-11,77,-99,-37,-17,26,-43,43,23,100,48,-102,102,-22,-96,26,77,38,-22,0,76,-45,119,80,33,55,83,115,64,-58,-26,-118,67,28,42,69,-92,50,81,79,-87,45,11,73,64,-56,-38,-94,52,12,-92,105,-90,-103,-112,-58,106,-83,35,83,2,7,53,14,-20,86,-24,-76,56,73,82,9,41,88,68,-86,-12,-11,122,-50,-60,-110,-121,-89,-121,-87,17,38,-6,112,122,98,36,-36,42,68,108,83,25,126,-34,97,90,81,58,-75,75,32,-101,11,80,58,-118,-111,-107,-97,21,3,85,-108,70,105,-104,-90,3,77,37,33,12,52,-45,76,6,-46,-46,1,118,-46,-30,-112,-57,-123,-87,0,-92,50,64,41,-44,-115,5,-92,52,-122,70,-43,3,80,5,51,76,106,102,68,15,85,-102,-83,12,-127,-50,42,-123,-59,-50,43,83,-5,121,20,13,72,-118,-20,-6,-71,-49,-11,-111,-29,84,-87,87,85,-88,120,97,-3,97,15,-2,-43,-89,-115,90,-77,-6,-80,123,116,63,-5,94,-92,77,94,-95,-31,-121,-19,-94,78,-102,-75,88,-113,82,-51,100,-24,-79,-5,84,91,-114,-1,0,-46,-76,45,-75,47,83,89,-14,17,-19,81,112,106,-125,-42,-125,-88,3,-34,41,-30,-114,65,123,113,49,77,43,71,43,15,110,-121,8,-86,69,-126,-105,40,123,113,25,113,64,21,7,76,117,67,-79,79,81,72,-48,-112,10,90,-122,88,-76,-45,64,-56,-102,-96,106,96,84,53,25,-96,-56,-122,65,85,-35,106,-47,55,51,-18,-33,104,-84,-121,-108,51,87,-89,-122,90,30,126,42,90,-40,97,-120,53,39,34,51,-59,0,-46,29,-53,17,-13,86,113,-59,64,92,-127,-42,-93,-59,97,51,-45,-62,-50,-24,-112,45,62,-96,-19,22,-106,-96,-48,41,-122,-128,34,122,-82,-44,-64,-83,-118,-119,-87,-104,-116,34,-94,-99,126,90,-93,8,-77,-98,-44,-37,21,-107,-34,-67,-100,63,-64,112,87,-8,-55,-93,-85,41,-122,-21,90,51,-106,68,-33,2,-86,-101,-123,29,-23,20,-119,-93,-70,30,-75,-89,111,46,-8,-22,25,66,73,81,14,-75,-123,67,-69,7,-71,45,45,115,-98,-62,29,75,72,-95,41,-122,-127,17,61,86,122,98,43,-45,88,83,49,16,37,54,-23,49,21,104,-50,72,110,114,122,-81,90,-51,81,94,-59,15,-31,-100,-75,-2,50,81,79,21,-93,57,-115,83,124,-94,41,12,120,-116,-44,50,-58,-44,-48,16,111,-14,-6,-43,89,103,57,-21,85,99,48,-122,102,-36,57,-83,-72,36,44,-108,20,86,-68,122,-61,-108,-55,-65,-126,104,72,119,35,-110,-26,88,-72,70,57,-82,-81,67,-103,-27,-76,82,-29,6,-108,-47,125,11,-46,81,21,112,-43,59,-16,95,17,54,41,-40,-82,115,-38,6,72,7,52,-110,-22,-56,36,-38,43,35,-97,-107,-56,-40,-79,-109,-52,80,122,-43,-97,-79,-57,63,90,72,-59,-24,80,-68,-47,20,-3,-54,-58,-72,-45,-92,-121,-86,-43,41,88,-34,21,10,-15,51,-64,-33,41,-83,123,61,92,-28,7,-87,-87,11,-22,-115,-9,55,45,-18,86,65,87,81,51,92,-90,68,-66,85,52,-63,-19,-94,-71,42,-99,-8,31,-120,-110,-99,92,-89,-72,45,20,12,74,-116,-45,17,12,-107,89,-23,-120,-90,13,58,-88,-60,127,106,-85,114,120,-90,101,-44,-27,-11,111,-65,89,-30,-67,-118,31,-61,60,-22,-1,0,24,-15,87,45,-71,-83,36,114,-49,96,-69,-36,62,-107,-102,-30,-86,2,-119,-45,104,19,49,-123,65,-83,103,-72,-14,102,-96,87,-2,89,-57,72,-88,-56,-44,-71,-108,90,24,82,-40,12,-29,-26,-84,-19,81,33,-71,117,49,-116,55,-15,86,-105,57,-19,112,-80,-118,41,88,-58,-67,86,-90,-97,78,108,-16,42,46,117,-19,-96,-85,-89,16,-68,-41,47,-82,74,103,-70,22,-47,-12,-17,78,-26,-108,-9,45,-23,-10,-64,52,113,-127,93,-92,49,42,-53,61,-115,71,-73,91,-127,-116,84,95,-40,-69,8,-36,56,-84,-82,-50,123,-40,-48,-73,-73,75,104,-8,-30,-95,-72,-105,117,4,-112,45,91,-127,-54,114,41,-127,-89,111,-88,-100,97,-23,-51,-116,23,-59,75,-111,60,-89,43,-87,-36,-17,-71,111,65,85,18,78,106,-29,-16,-99,86,-48,-41,-46,-75,-71,44,-25,30,118,-25,-117,-27,118,-119,-103,117,-89,19,61,-63,18,99,-53,56,21,-50,-38,-33,60,-81,115,12,41,-67,-41,-65,-91,100,-116,47,118,67,-93,73,44,50,77,-106,34,66,-11,-23,54,-10,81,121,0,-77,-25,-118,-122,109,-120,124,-79,82,48,124,71,119,13,-107,-85,4,-105,-9,-121,-75,113,-42,80,31,-11,-46,-1,0,-84,106,93,13,104,102,-118,-10,104,127,12,-13,107,-4,99,-59,90,-127,-10,-42,-116,-26,-111,-79,99,55,-52,26,-76,102,-70,93,-107,-127,-54,-52,-55,-18,-14,112,42,37,57,-90,59,104,76,-107,97,77,4,-109,-64,55,62,42,-11,-42,126,-49,-123,-21,80,-11,118,17,-56,93,-37,75,19,29,-62,-85,70,-116,92,5,25,53,-48,-98,-121,82,119,57,-83,27,15,18,94,-63,24,-117,8,-61,61,77,107,10,61,110,97,82,124,-69,16,-21,58,-109,-61,110,121,-3,-28,-107,99,-61,-6,119,-10,110,-107,36,-45,46,26,79,90,-25,-8,89,-108,63,-122,83,-118,-56,121,-32,-89,47,35,87,85,53,-63,-76,-75,-3,-8,-58,5,101,-54,117,-30,125,-8,-63,28,29,-12,-33,-38,-6,-50,6,-67,-86,31,-61,71,-107,95,-29,30,-75,98,62,107,70,115,50,-44,91,-108,-4,-75,44,-77,62,43,38,101,-44,98,26,-104,83,19,39,74,-98,46,77,73,-103,-85,105,14,-43,-55,-85,49,70,-45,62,22,-110,51,99,111,116,-67,-21,-121,90,-67,-32,-17,12,-92,119,-65,109,112,-91,87,-18,-118,-72,-5,-52,-86,-45,117,41,33,83,-72,41,-32,-43,123,120,-89,102,114,-85,-33,-118,80,-85,104,-100,115,-89,125,13,-19,15,-61,-30,105,126,-35,-87,73,-72,71,-9,18,-101,-85,-22,13,117,33,-118,46,34,90,-59,-56,-86,84,-67,-92,-19,-47,15,-16,-29,-1,0,-89,-17,111,-70,-107,47,-117,-11,120,102,-123,109,32,59,-100,-98,-75,124,-34,53,45,113,-97,66,-128,-45,13,3,26,106,54,-86,36,-126,74,-86,-11,68,-114,-93,20,-55,19,-20,-66,109,50,77,37,-120,-30,-81,-108,-29,-87,86,-52,-25,-11,95,15,-36,-69,101,43,29,-12,91,-40,-1,0,-27,-111,63,74,-12,104,-43,81,-115,-103,-25,-44,124,-46,-71,93,-83,-92,-115,-80,-15,-80,-4,43,-90,-45,-68,59,-45,-23,-64,-92,120,-38,123,26,-69,-10,51,107,-95,11,45,-50,-89,19,-57,44,-20,81,-69,85,88,-20,-81,116,-83,-1,0,99,-108,-86,-73,81,83,-20,-43,-76,15,109,-17,28,-3,-20,-105,19,94,-86,21,59,-119,-27,-85,-85,-77,-73,72,-83,-78,-62,-91,-4,54,42,70,94,-91,127,36,36,-94,-73,-53,89,30,116,-77,-55,102,-69,8,107,-58,-52,36,-100,-76,61,-4,-73,114,-59,58,-68,-109,-24,-124,-90,26,64,52,-44,77,86,73,4,-107,85,-22,-124,62,-99,84,65,122,-56,100,-42,-90,-64,43,69,-79,-28,98,62,49,-115,2,63,106,124,122,108,46,121,90,-82,99,-106,69,-119,60,59,105,32,-7,-108,85,-88,116,-56,96,-117,-53,65,-58,40,-56,-86,100,53,-54,-59,-126,-39,-73,-25,-75,116,-70,116,65,97,-36,122,-42,82,3,-86,-47,119,52,108,91,-96,-32,84,58,-43,-117,-54,-63,-94,95,-83,115,109,-87,10,26,-36,-55,-120,53,-84,-101,-98,50,43,43,83,-44,74,94,33,63,116,-42,-86,66,-28,-44,-23,108,94,38,-73,5,27,-102,75,-117,-126,-93,6,-70,54,67,-61,-23,-27,-24,-74,99,24,-3,-40,-83,10,-118,-88,-88,-47,92,-90,126,-76,-111,-115,62,103,40,62,81,-23,92,-106,-103,112,-73,17,-122,94,-122,-68,-55,51,-43,-53,-93,99,66,-99,88,30,-16,-122,-104,104,1,-122,-94,106,-94,72,36,-86,-49,84,34,74,90,-93,51,83,74,76,-75,105,-36,112,106,-49,26,-65,-15,70,66,45,-32,88,-57,106,-106,-80,119,102,-117,88,-108,117,35,18,68,119,98,-68,-45,89,-51,-43,-31,72,-69,86,-44,117,51,110,-56,91,105,-75,61,63,7,107,52,94,-75,-81,103,-82,11,-84,35,117,-82,-85,-40,-57,-107,75,84,111,91,91,-124,-113,-52,21,-121,-88,93,111,-70,-59,97,-10,-121,75,123,-107,-82,99,-13,89,-110,-101,35,-59,121,114,-22,119,96,119,52,-23,107,19,-37,16,-44,102,-104,12,53,27,85,18,65,37,86,122,-95,18,83,-123,81,-103,-71,-93,-81,25,-85,87,-121,-25,-86,60,74,-33,-59,35,-116,-42,-115,-89,90,76,-50,101,-6,40,-89,-15,24,71,112,-94,-67,-97,105,-53,76,-42,110,-47,-71,66,-30,77,-14,96,82,63,17,-45,-91,91,-8,108,118,45,-115,106,99,-56,0,-84,-27,102,-51,100,115,90,-51,-61,74,-2,66,125,-26,-84,-71,60,61,113,-92,-19,-68,-99,-93,117,-35,-13,-32,-12,-82,-54,90,43,-104,84,92,-56,-39,-110,123,77,116,45,-100,31,39,114,113,84,98,-47,96,-46,111,118,31,-100,30,-115,-118,-20,-124,61,-92,-114,11,-54,-16,42,-13,-30,-82,-50,-39,59,35,-91,-75,-43,-81,109,127,-47,-83,-116,66,37,-2,-3,116,54,71,80,-71,-73,-13,77,-52,92,-12,-38,-75,50,-124,-101,-36,-49,-38,-37,68,93,-79,-107,-92,-120,-7,-97,125,79,53,-52,-22,-6,-34,-93,101,127,36,42,-29,104,-23,-14,-42,82,91,52,-53,-92,-17,-71,-105,117,-82,95,93,-59,-68,108,44,68,-67,-37,20,-96,-28,-26,-96,-66,-101,45,-128,107,-119,-21,51,-110,-102,-44,-96,36,-110,105,66,-81,34,-70,104,16,65,2,-81,-96,-85,-87,-95,-46,80,-102,-16,-103,48,-76,-78,49,72,11,-75,17,41,-100,30,-93,-86,-70,106,97,-29,63,116,-42,-91,-58,-95,-88,-8,-122,15,34,32,-95,7,-52,-43,-70,-26,123,84,-91,-51,29,-113,110,-122,46,53,23,44,-118,18,-51,55,-105,-26,25,91,45,-17,94,-121,-16,-46,89,-101,72,-103,101,-35,-75,100,-7,51,94,106,-27,-114,-84,-17,-48,-21,86,53,87,102,29,91,-83,80,-44,52,-120,-18,-36,-53,-1,0,45,61,-21,24,-46,-108,-107,-42,-58,109,63,-78,114,23,86,75,109,59,35,-122,-36,28,-102,-73,81,-44,-26,123,-120,-51,-75,114,107,10,-22,-29,-50,-102,-74,76,-25,-87,-85,38,71,-14,-44,113,-102,-93,127,115,27,14,-97,61,103,78,-41,-44,-70,113,-44,126,-117,14,100,-36,107,87,80,-97,108,123,69,18,-42,70,-42,-9,-116,-3,62,47,50,92,-45,60,81,124,-74,-10,-34,90,-11,-90,-9,-80,51,-121,-76,-123,26,-102,-105,-119,-69,105,53,-9,84,-25,-55,20,-92,120,-46,-113,51,-48,-80,36,7,-91,27,-85,-80,-64,77,-43,-97,125,53,-72,56,124,87,30,38,-94,-89,27,-77,122,48,-26,102,61,-35,-99,-84,-24,74,-114,107,67,-64,26,-124,-97,-38,-46,-39,-50,-39,30,95,-18,-21,-26,49,126,-51,-53,-103,108,123,116,111,-53,102,-14,42,124,101,-88,106,-64,122,-106,96,-51,11,83,87,115,89,-100,-45,50,-11,91,-67,-85,-76,86,77,-71,-55,-36,107,109,-96,115,9,54,-86,-106,-20,85,-65,58,-94,-9,2,-6,112,86,-120,108,116,83,-113,83,-93,-80,81,4,34,-95,-71,111,54,76,102,-93,-19,22,89,-127,5,-100,37,-21,-122,-41,-81,126,-45,118,121,28,120,100,58,-53,91,-103,28,43,87,83,111,47,-103,16,99,91,101,-8,-105,81,114,-78,113,116,84,29,-47,-97,125,-88,-76,15,-127,88,114,-71,-98,-25,123,-3,-38,-28,-58,98,84,-91,-55,35,76,61,59,43,-94,116,-100,-106,-14,-111,51,-102,-24,116,-49,15,77,102,-30,-18,4,-37,47,-83,120,24,-38,-4,-38,35,-46,52,71,45,65,-52,-51,24,-101,21,36,-73,27,16,-44,-37,83,-102,103,57,119,112,102,-102,-97,-69,108,124,86,-109,-20,97,99,63,-20,-1,0,104,-109,-25,53,114,-50,-39,33,-112,115,72,-24,-119,-73,-67,10,99,117,48,8,-107,-77,-26,86,96,69,-87,78,103,-113,-54,-74,-28,-41,39,-86,-24,-13,-39,-63,-26,-51,-34,-75,-94,-107,-36,-64,117,-23,92,-18,-71,115,19,-3,-49,-67,88,102,63,-60,55,-62,34,-66,-107,23,-99,114,-66,-43,-39,71,-14,71,-118,-17,-53,35,106,119,48,-58,63,126,-58,94,-81,36,104,-68,-43,11,101,18,87,-101,-103,127,24,-24,-62,-4,7,99,-31,109,25,83,-3,46,85,7,-5,-107,-45,-41,20,40,-58,106,-20,-12,37,-87,-23,96,101,118,76,105,-122,-78,61,-92,48,-44,100,-48,49,-122,-93,52,-60,68,-43,11,85,1,37,20,-60,75,29,90,-120,-42,-111,60,-54,-1,0,17,100,61,88,-128,-48,114,-78,-30,-55,84,117,43,-67,-85,-118,113,57,-90,101,64,-39,109,-43,55,-100,15,6,-121,-15,25,-92,67,35,108,108,-91,69,53,-53,-19,84,125,-61,-65,-114,80,80,114,51,78,-33,95,95,-123,-100,101,77,88,-7,-6,-47,105,-115,125,-81,-42,-77,110,-76,-88,-90,-19,-51,93,106,17,-86,-119,-123,71,6,26,110,-97,-10,86,53,-88,94,-118,48,-10,84,-7,71,82,92,-14,-71,-107,-82,88,-76,-112,-18,108,-118,-63,-75,121,-83,-27,3,57,-26,-66,91,19,87,-38,-117,46,43,72,-98,109,111,-120,120,-71,93,-36,-75,95,-122,116,-57,13,86,114,-56,-107,-89,0,117,-84,59,-37,-97,50,92,102,-98,-57,52,-59,15,-78,58,-110,9,-109,111,94,107,52,-11,4,-119,-12,-65,34,75,-122,51,114,-93,-96,-85,90,-41,-39,-4,-65,-35,114,69,51,61,-28,115,-74,22,127,105,-100,-109,-64,20,107,-45,-70,-86,75,68,107,105,122,-83,-62,94,-59,-67,-14,-66,-107,-41,45,-52,-37,-9,31,-69,93,20,-15,50,-61,84,-14,60,-38,-8,120,-52,-76,-105,27,-86,77,-11,-12,-76,49,17,-83,27,-93,-61,-87,69,-63,-114,-33,80,-49,113,-27,38,-22,-86,-81,-35,100,-59,106,102,-22,90,-17,-38,-96,41,-125,-109,-21,86,124,21,-89,-93,-106,111,74,-12,99,-5,-70,101,-41,-98,-82,71,119,-93,-8,34,4,-72,-55,82,-31,127,-67,76,-15,53,-91,-58,-97,114,-119,16,-7,61,-21,-114,79,-98,71,2,-83,121,21,-83,96,-110,95,-103,-100,-29,-38,-76,-19,109,-128,21,-91,60,68,-16,-17,70,105,40,70,-94,29,36,62,-107,86,91,102,-109,-125,-46,-67,-105,-104,39,52,-56,-38,-80,127,9,-39,-126,94,-8,-92,-45,9,-84,-113,105,12,38,-104,77,3,26,106,51,64,12,53,17,-90,33,-7,-90,59,-30,-112,16,52,-107,28,-100,-83,51,43,28,-106,-84,113,45,81,-21,94,-19,31,-127,30,101,127,-116,-102,-42,49,-25,2,107,-80,-77,-72,65,10,-86,-98,107,-101,21,-87,-55,34,-57,-104,-99,119,-2,-78,-80,117,97,-76,87,93,29,100,116,83,-40,-93,28,91,-106,-69,-81,-122,-19,18,77,44,111,-128,-39,-82,-102,-17,-35,50,-81,-84,25,-23,-127,-29,-127,50,120,-84,-83,113,116,-19,78,-37,100,-110,101,-69,98,-68,-101,-22,113,-46,-125,-67,-52,33,110,-112,-82,-44,-24,42,68,97,-46,-75,111,-103,29,-85,65,-40,77,98,123,35,115,76,38,-127,-115,52,-46,104,2,51,81,26,96,57,-114,42,-69,-74,105,18,71,67,-3,-38,9,57,45,99,-119,107,56,26,-9,-88,-4,8,-14,-21,127,16,-111,31,-102,-36,-45,55,-79,-49,-91,69,127,-124,-25,102,-91,-20,-37,33,-59,86,-78,-113,-8,-85,-117,-20,-110,108,-94,-124,-113,52,-44,57,106,-25,-111,94,120,-81,84,116,-5,52,-65,33,28,28,-41,87,-89,-24,55,11,20,119,76,-19,39,-55,-58,107,-114,116,-44,85,-52,-28,-43,61,11,101,25,126,-16,-59,70,-47,-6,86,41,-40,123,-116,-13,118,-15,-42,-93,-63,-111,-66,115,85,-53,-44,73,-106,0,-57,74,74,-52,-79,-78,40,117,42,107,-106,-65,-5,78,-107,113,-66,-103,-87,-86,-84,118,-32,-41,-67,114,124,-45,115,92,-57,-84,55,52,-36,-48,49,41,-122,-128,24,77,70,-44,-64,-115,-38,-93,-90,64,83,95,-18,-45,19,57,61,100,-2,-10,-77,107,-35,-95,-4,52,121,85,-66,50,-43,-100,62,107,-41,81,101,16,-119,0,-82,108,76,-70,28,-75,24,-77,90,-7,-83,-100,-102,-77,110,-98,95,42,110,-52,-22,54,-76,-65,-118,87,49,46,-35,70,-47,110,63,-37,-116,-19,53,-73,-90,-4,71,-45,-81,-33,-55,-72,-113,-20,-69,-65,-66,-43,-75,95,108,-93,101,-80,-38,79,98,-66,-75,-31,-85,77,90,-14,25,52,-79,-71,-117,3,35,110,-29,21,-37,-126,-106,54,-88,-83,-48,12,87,3,-107,-29,99,-118,-78,114,35,120,97,94,125,1,-114,-117,72,-119,121,-108,111,127,126,-107,106,53,-14,-8,-84,-86,-69,-99,-8,61,-57,102,-116,-41,57,-21,13,-51,37,48,18,-101,64,-58,26,-115,-87,8,-126,-106,-103,34,19,81,-65,-35,-96,71,41,-84,127,-84,-84,-31,-51,123,-76,62,4,121,-107,-2,51,123,72,-73,-2,35,91,113,-82,72,-82,26,-6,-56,-30,121,-82,-69,1,-47,120,71,92,-66,-45,-11,8,97,-74,127,-111,-37,27,72,-81,93,-121,85,-114,101,-37,114,-107,-28,98,-31,105,104,76,-117,82,-33,91,-59,7,-18,-40,31,64,43,-97,-112,-18,98,107,-103,25,-88,-40,101,37,89,66,83,72,-92,3,10,-118,-116,-60,-75,87,2,51,0,-91,9,-76,83,1,8,-86,-46,117,3,-83,80,-15,119,-53,-95,77,-113,85,-2,117,116,-66,52,116,-59,28,-11,-105,-104,126,94,2,-118,-42,69,27,118,-42,-75,55,52,35,54,-46,-87,44,-110,1,-19,-118,-26,117,77,-33,106,-7,-114,77,105,-121,107,-104,101,65,74,58,-41,104,27,-98,17,-121,-51,-41,32,-29,-18,-27,-65,74,-12,-43,-23,94,102,43,-29,33,115,87,-120,-109,-102,75,40,-68,-75,-51,122,-112,127,-70,60,124,102,-115,-105,124,-47,83,-37,68,-50,126,81,88,-67,17,-27,-58,55,54,45,116,-2,-17,90,113,-58,16,113,88,29,9,19,10,-52,-15,60,38,109,18,-28,1,-110,6,-17,-54,-86,-101,-76,-47,103,35,97,115,-71,62,-107,-94,-105,32,87,69,72,-22,104,67,-86,19,125,-22,-50,103,110,15,114,58,90,-52,-11,-60,-92,-96,98,83,77,32,26,106,51,76,100,102,-101,69,-55,10,49,69,-60,67,53,-102,-53,-42,-77,101,-79,-108,28,40,-56,-82,-70,85,122,30,110,50,-99,-11,46,-39,105,39,-84,-107,-73,111,108,-79,14,-108,-27,59,-98,113,104,84,-126,-77,1,-62,-107,-48,72,-123,0,-38,97,-90,50,25,91,2,-88,-65,53,-108,-103,-22,97,35,101,113,-108,84,30,-128,-108,-108,12,74,74,67,26,106,51,77,48,35,-94,-103,34,-127,79,11,76,68,-118,-76,-11,-116,82,34,81,-71,58,-15,82,110,-86,-26,103,55,-43,-112,-19,-12,-19,-12,115,11,-22,-88,95,50,-99,-26,81,-52,31,85,69,123,-53,104,115,100,-43,-102,104,-30,-60,83,-28,98,83,77,81,-54,54,-101,64,12,52,-45,76,10,115,-125,85,-115,98,-49,118,-121,-64,54,-101,82,116,9,73,64,-62,-102,104,24,-45,81,26,99,63,-1,-39";
        byte[] bphoto = conver2HexToByte(photo);

        String fileName = "/Users/yongchizhang/testphoto.jpg";
        File testimage = new File(fileName);
        if (testimage.exists()) {
            testimage.delete();
        }
        FileOutputStream fos = new FileOutputStream(testimage.getPath());
        fos.write(bphoto);
        fos.close();


        byte[] bb = hh.getBytes();
        String ddfd = conver2HexStr(bb);
        System.out.println(ddfd);
        for(int i=0;i<bb.length;i++)
            System.out.print(bb[i]);
        System.out.println();
        System.out.println();
        String sss=new String(bb);
        System.out.println(sss);
        System.out.println();
        System.out.println(bb.length);

        int[] arr = {1,2,5,6,6,6,6,6,8,10,10,10,10};
        int res = binary_search(arr,1);
        System.out.println(res);
        res = binSfirst(arr,6);
        System.out.println(res);
        res = binSfirst(arr,1);
        System.out.println(res);
        res = binSlast(arr,6);
        System.out.println(res);

        int[] nums1 = {1,2}; int[] nums2 = {3,4};
        LinkedList<Integer> l = new LinkedList<Integer>();
        l.add(8);
        l.add(9);
        System.out.println(l.size());
        System.out.println(BinarySearchPerfectSquare.Sqrt2(9.9));
        System.out.println(BinarySearchPerfectSquare.Sqrt3(125));
        System.out.println(Integer.MIN_VALUE);
        //System.out.println(Twoarray.findMedianSortedArrays(nums1,nums2));
        //int[] nums3 = intersect(nums1,nums2);

    }
    public int[] twoSum(int[] numbers, int target){
        int[] result = new int[2];
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        for(int i=0; i<numbers.length; i++){
            if(map.containsKey(target - numbers[i])){
                result[1]=i+1;
                result[0]=map.get(target - numbers[i]);
                return result;
            }
            map.put(numbers[i], i+1);
        }
        return result;
    }

    static int binary_search(int[] arr, int x){
        if(arr.length==0){
            return -1;
        }
        int low = 0, high = arr.length -1;
        while(low<=high){
            int mid = low + (high - low)/2;
            if(arr[mid]<x){
                low = mid + 1;
            }else if(arr[mid]>x){
                high = mid - 1;
            }else{
                return mid;
            }
        }
        return -1;
    }

    static int binSfirst(int[] arr, int x){
        if(arr.length ==0){
            return -1;
        }
        int low = 0, high = arr.length - 1;
        while(low < high){
            int mid = low + (high - low)/2;
            if(arr[mid]<x){
                low = mid + 1;
            }else if(arr[mid]>x){
                high = mid - 1;
            }else{
                high = mid;
            }
        }
        if(arr[high]==x){
            return high;
        }
        return -1;
    }

    static int binSlast(int[] arr, int x){
        if(arr.length == 0){
            return -1;
        }
        int low = 0, high = arr.length - 1;
        while(low+1 < high){
            int mid = low + (high - low)/2 ;
            if(arr[mid]<x){
                low = mid + 1;
            }else if(arr[mid]>x){
                high = mid - 1;
            }else{
                low = mid;
            }
        }
        if(arr[high]== x){
            return high;
        }else if(arr[low]==x){
            return low;
        }
        return -1;
    }
    public static String conver2HexStr(byte [] b)
    {
        StringBuffer result = new StringBuffer();
        for(int i = 0;i<b.length;i++)
        {
            result.append(b[i]+",");
        }
        return result.toString();
    }

    /**
     * 二进制字符串转换为byte数组,每个字节以","隔开
     * **/
    public static byte[] conver2HexToByte(String hex2Str)
    {
        String [] temp = hex2Str.split(",");
        byte [] b = new byte[temp.length];
        for(int i = 0;i<b.length;i++)
        {
            b[i] = Byte.parseByte(temp[i]);
            //b[i] = Long.valueOf(temp[i], 2).byteValue();
        }
        return b;
    }


}
