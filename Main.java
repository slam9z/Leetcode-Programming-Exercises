import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;
import java.math.*;

public class Main {

    public static void main(String[] args) throws IOException, ParseException {

        String mytime = new SimpleDateFormat("HH:mm:ss").format(new Date());
        String btime ="14:18:00, 06-30-17";
        DateFormat df = new SimpleDateFormat("HH:mm:ss, MM-dd-yy");
        System.out.println(mytime);

        int inmin = Integer.MIN_VALUE;
        System.out.println(Math.abs(inmin));

        //Date now = df.parse(mytime);
        Date now = new Date();

        BigInteger nn = new BigInteger("0");
        long aadd  = 0;

        Date compare = df.parse(btime);
        System.out.println(compare);
        double min_interval = (compare.getTime()-now.getTime());// / (1000.0 * 60.0);
        System.out.println(min_interval);
        System.out.println("Time");

        int k =3;String num = "1432219";
        StringBuffer str = new StringBuffer(num);
        StringBuffer ans = new StringBuffer();






        int min =0;
        while(k < str.length() && k>0 ){
            int tmp = min;
            for(int i=tmp + 1; i<=tmp + k; i++){
                System.out.println(""+i+" "+k+" "+min);
                if(str.charAt(i)<str.charAt(min)){
                    min = i;
                }
            }

            for(int i=tmp; i<min;i++){
                str.deleteCharAt(tmp);
                k--;
                min--;
            }
            min ++;
            System.out.println(""+min+" "+str.toString()+" "+k);
            if(min == str.length() - k){
                while(k>0){
                    str.deleteCharAt(str.length() - 1);
                    k--;
                }
            }

        }


        System.out.println(str.toString());

        int a = 2, b=6;

        a^=b;
        b^=a;
        a^=b;

        int dd,ee;


        Deque<String> destr = new LinkedList<>();




        String sssd= "d//s/d";
        String ssew = "   +23   ";

        ssew = ssew.replace(" ","");
        int yew = Integer.parseInt(ssew);
        System.out.println(yew);
        StringBuffer s22 = new StringBuffer('[');




        String[] strddd=sssd.split("/");
        for(int i=0; i<strddd.length; i++)
            System.out.println(i+"  "+strddd[i]);


        System.out.println(s22.toString());


        int[] numsddd={1,2,3,4,5,6};
        int[] nums=new int[]{1,2,3,4,5,6};
        System.out.println(nums);
        char[] numsd=new char[]{'1','2','3','4','5','6'};
        System.out.println(numsd);

        String s1="sd3";
        String s2="sd"+s1.length();
        System.out.println(s1==s2);
        System.out.println(s1.equals(s2));



        System.out.print("2 + 2 = " + (2+2)+"\n");

        char x = 'X';
        int iii = 0;
        System.out.println(true ? x : 0);
        System.out.println(false ? iii : x);


        System.out.println(
                Long.toHexString(0x100000000L + 0xcafebabe));
        System.out.println(
                Long.toHexString(0x100000000L + 0xcafebabeL));


        /*long 类型计算的时候要确保每个都是long类型*/
        final long MICROS_PER_DAY = 24 * 60 * 60 * 1000 * 1000;
        final long MILLIS_PER_DAY = 24L * 60 * 60 * 1000 * 1000;
        System.out.println(MICROS_PER_DAY);
        System.out.println(MILLIS_PER_DAY);


        System.out.println(a+" "+b);
        System.out.println(2.00-1.10);
        System.out.printf("%.2f%n",2.00 - 1.10);
        System.out.println(new BigDecimal("2.00").subtract(new BigDecimal("1.10")));
        System.out.println(new BigDecimal(2.00).subtract(new BigDecimal(1.10)));



        for(int i=-20,j=3;i<20;i++){
            System.out.print(  (i%3) + "  ");
        }
        System.out.println();


        for(int i=-20;i<20;i++){
            System.out.print(  (i&1) + "  ");
        }
        System.out.println();
        for(int i=-20;i<20;i++){
            System.out.print(  (i%2) + "  ");
        }
        System.out.println();

        String hh = "Hello ";


        String photo = "-1,-40,-1,-32,0,16,74,70,73,70,0,1,1,1,0,0,0,0,0,0,-1,-37,0,67,0,12,8,9,11,9,8,12,11,10,11,14,13,12,14,18,30,20,18,17,17,18,37,26,28,22,30,44,38,46,45,43,38,42,41,48,54,69,59,48,51,65,52,41,42,60,82,61,65,71,74,77,78,77,47,58,85,91,84,75,90,69,76,77,74,-1,-37,0,67,1,13,14,14,18,16,18,35,20,20,35,74,50,42,50,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-1,-60,0,31,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,-1,-60,0,-75,16,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,-127,-111,-95,8,35,66,-79,-63,21,82,-47,-16,36,51,98,114,-126,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,-125,-124,-123,-122,-121,-120,-119,-118,-110,-109,-108,-107,-106,-105,-104,-103,-102,-94,-93,-92,-91,-90,-89,-88,-87,-86,-78,-77,-76,-75,-74,-73,-72,-71,-70,-62,-61,-60,-59,-58,-57,-56,-55,-54,-46,-45,-44,-43,-42,-41,-40,-39,-38,-31,-30,-29,-28,-27,-26,-25,-24,-23,-22,-15,-14,-13,-12,-11,-10,-9,-8,-7,-6,-1,-60,0,31,1,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,-1,-60,0,-75,17,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,-127,8,20,66,-111,-95,-79,-63,9,35,51,82,-16,21,98,114,-47,10,22,36,52,-31,37,-15,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,-126,-125,-124,-123,-122,-121,-120,-119,-118,-110,-109,-108,-107,-106,-105,-104,-103,-102,-94,-93,-92,-91,-90,-89,-88,-87,-86,-78,-77,-76,-75,-74,-73,-72,-71,-70,-62,-61,-60,-59,-58,-57,-56,-55,-54,-46,-45,-44,-43,-42,-41,-40,-39,-38,-30,-29,-28,-27,-26,-25,-24,-23,-22,-14,-13,-12,-11,-10,-9,-8,-7,-6,-1,-64,0,17,8,0,-16,1,64,3,1,33,0,2,17,1,3,17,1,-1,-38,0,12,3,1,0,2,17,3,17,0,63,0,-28,-46,-84,-96,-81,48,-24,101,-120,-59,89,90,-109,-98,69,-104,-86,113,90,35,22,72,-107,54,43,67,50,69,21,32,-89,114,9,69,72,-76,-55,100,-128,83,-79,76,-111,-29,-118,118,40,36,90,76,80,1,-118,40,1,105,113,-102,4,72,-67,41,-44,8,66,40,-19,72,10,-17,-102,-119,-87,26,34,39,21,1,-26,-103,67,13,68,-43,37,16,56,-86,-14,84,51,68,86,-112,85,71,25,53,6,-47,46,67,-99,-125,53,-69,-90,-10,-82,90,-37,30,-90,95,-15,-101,-79,-12,-89,-102,-13,-49,-89,71,-110,45,89,-114,-67,-109,-29,-28,88,21,42,-109,82,96,-53,49,85,-95,90,-93,22,73,29,89,21,102,76,-111,106,69,21,68,19,1,79,-59,50,71,-127,79,-96,-111,-54,41,-44,18,24,-96,83,1,-44,-104,-92,1,-118,120,24,-96,7,1,79,20,8,93,-76,50,-48,34,23,90,-84,-30,-111,104,-82,-43,30,40,52,35,106,-124,-46,25,19,-43,89,42,25,-94,43,53,87,113,-51,102,-51,-111,118,60,20,21,-77,-89,118,-82,106,-33,9,-23,-27,-1,0,25,-71,31,74,121,-81,60,-6,-108,121,42,-44,-21,94,-55,-15,-46,44,-83,88,-115,115,72,-25,-111,97,106,101,53,104,-55,-109,33,-85,43,90,25,-78,85,21,56,-90,102,72,41,-30,-103,34,-44,-96,113,65,35,-88,-96,66,-118,120,20,-64,90,54,-48,33,-40,-92,-92,33,-62,-98,41,-120,112,52,-22,66,33,-112,85,89,22,-111,104,-82,-53,81,55,20,26,16,-55,80,-102,69,-112,61,64,-11,44,-47,21,-34,-85,31,-67,89,-77,84,92,69,-7,69,109,105,-29,-127,92,-43,-74,61,60,-65,-29,54,-29,-23,78,53,-25,31,82,-113,39,-37,83,-60,43,-38,62,54,69,-92,21,97,41,24,72,-108,84,-86,43,67,34,120,-58,42,-54,85,25,-78,117,-87,-41,-11,-86,51,37,85,-87,0,-96,-127,-31,105,-8,-59,50,66,-110,-128,28,42,76,80,33,-64,83,-64,-96,66,17,77,-37,64,14,81,-59,45,2,10,117,0,48,-13,80,58,-44,-108,64,-53,85,-36,80,104,86,122,-123,-88,44,-81,37,66,106,110,104,64,-11,89,-70,-42,108,-43,23,-96,92,32,-35,91,86,3,-91,115,86,-8,79,79,47,-2,33,-77,31,74,113,-81,56,-6,-108,121,116,-85,-27,-71,-95,58,-41,-81,29,-113,-113,-87,-93,39,67,86,34,53,71,52,-117,72,42,116,90,-47,24,-78,85,-87,-106,-88,-122,78,-65,-83,76,-108,-56,44,37,74,5,6,99,-23,105,-110,46,56,-90,-30,-104,18,1,-7,-45,-42,-127,15,-59,58,-112,-121,109,-93,-53,-96,66,98,-105,20,0,-128,82,-102,0,-115,-123,70,-12,-118,32,97,85,-36,80,90,42,-56,42,-69,80,104,87,-110,-96,122,-122,106,-118,-50,106,-69,31,-102,-77,102,-120,-47,-123,-73,32,-83,-85,14,-43,-49,95,99,-44,-53,-65,-120,108,39,74,113,-81,56,-6,-124,121,-74,-95,15,-49,-59,83,-63,94,-75,-21,83,-8,79,-111,-81,-15,18,-95,-85,113,85,-100,-78,46,71,83,-91,104,-116,89,48,-87,-93,-86,51,39,90,-108,80,65,101,42,100,20,-52,-39,38,-38,118,-38,100,-122,41,113,-118,0,41,-53,64,18,84,-118,-76,-119,31,-118,82,41,16,55,28,-46,116,-90,49,-99,105,121,-17,72,100,102,-94,106,10,68,77,85,-34,-126,-111,94,65,85,92,80,106,-118,-110,85,105,42,89,-78,43,61,67,-4,66,-78,102,-88,-45,-116,112,49,91,90,127,65,88,87,-8,79,79,46,-8,-51,-124,-23,78,53,-26,-97,80,-114,22,-11,43,61,-112,96,-41,-87,13,-113,-114,-81,-15,-112,-96,-85,72,107,99,-102,69,-88,-49,21,97,26,-83,25,50,117,-87,-112,85,25,-106,7,-23,83,45,50,9,-121,-21,83,33,-90,65,97,58,83,-15,65,-104,-104,-89,98,-128,27,-118,120,-96,7,0,115,82,-83,33,49,-12,-76,-119,23,21,29,0,27,113,81,-67,49,-112,-102,-115,-87,22,68,-43,11,83,40,-81,37,86,122,13,17,82,90,-89,39,90,-122,108,-118,-14,84,72,50,107,54,106,-115,72,-41,104,25,-83,-85,1,-46,-80,-81,-79,-22,101,-33,25,-82,-99,41,77,121,-89,-45,-93,-123,-66,-84,-57,-55,53,-23,83,62,62,-65,-58,48,84,-15,-42,-25,59,44,-91,91,74,-92,98,-53,17,10,-76,-107,-95,-101,39,20,-27,-90,102,78,-75,50,45,4,50,117,-87,63,-99,4,15,81,75,-118,4,59,109,55,20,-128,112,25,-89,80,33,-12,-76,8,117,56,45,4,-115,97,85,-36,80,82,34,53,19,26,11,34,99,85,-34,-126,-56,30,-85,-75,6,-120,-87,53,84,122,-122,106,-118,-46,84,43,-60,-103,-84,-103,-78,53,35,109,-64,86,-35,-123,97,89,-24,122,-103,119,-58,107,-89,74,83,94,121,-12,-24,-31,111,-115,102,-109,-125,94,-99,61,-113,-114,-81,-15,-116,90,-99,13,106,115,-78,-54,26,-77,25,-85,70,76,-75,25,-85,10,106,-52,-103,48,-87,22,-103,5,-124,21,40,-96,-126,80,106,69,-96,-126,101,-89,-48,72,-6,105,20,-124,0,84,-104,-96,66,-30,-108,10,4,72,-85,82,98,-111,36,82,84,12,56,-96,-78,-76,-107,3,83,52,34,53,19,-12,-90,81,86,74,-82,-58,-125,82,-76,-75,82,74,-122,106,-118,-110,26,-119,15,-17,5,102,-51,-94,106,-82,56,-59,110,88,116,21,-123,125,-113,83,46,-8,-51,101,-23,78,53,-25,31,76,112,119,-107,-104,-3,107,-44,-90,124,125,127,-116,106,-98,106,117,-83,14,86,78,-107,58,83,68,50,-36,85,105,77,106,98,-55,-123,79,26,-48,73,100,84,-99,41,-103,15,74,-109,52,-60,76,-76,-22,-110,7,-83,76,5,2,23,20,-108,-124,20,-31,64,-119,20,-45,-77,64,-120,94,-95,106,10,69,119,-86,-19,76,-48,-123,-22,-69,-102,101,-94,-69,-43,89,41,51,84,87,122,-83,37,102,-51,81,86,74,-84,62,-11,65,-76,77,88,-78,-72,21,-65,-89,-10,-82,122,-37,30,-90,95,-15,-102,-23,-46,-108,-41,1,-12,-89,3,123,89,114,-109,-46,-67,74,123,31,35,95,-30,25,25,-63,-85,113,-102,-43,-100,-84,-103,79,-91,89,67,66,51,101,-124,106,-80,-83,86,100,-53,80,-43,-75,-86,50,100,-118,106,85,-96,-111,-62,-91,20,-55,37,90,-108,80,64,-31,82,-83,73,34,-46,-114,105,8,92,83,105,-128,6,-89,110,-96,8,-40,-44,108,104,25,3,-102,-82,-44,-51,8,28,-43,103,-90,104,-118,-50,-43,89,-22,77,17,93,-51,64,-19,80,-51,81,82,67,85,15,-6,-50,42,77,-94,106,64,-37,-79,93,30,-99,-48,87,53,109,-113,87,47,-8,-115,-123,-23,74,107,-128,-6,51,-126,-70,-84,-39,-2,-31,53,-23,83,62,74,-73,-58,84,83,-51,91,-120,-41,67,57,-103,101,42,-62,-44,-93,38,88,67,86,-94,-85,51,101,-108,53,101,13,81,-109,39,74,-99,122,80,102,60,10,-111,122,-45,36,-103,41,-33,-54,-111,4,-117,82,80,33,42,85,-92,72,-22,-115,-88,2,58,76,-45,40,97,106,-115,-115,3,33,115,81,53,50,-54,-46,85,105,40,52,69,87,-30,-85,-79,-87,52,33,-112,-43,73,13,102,-51,81,86,67,85,-63,-61,-116,-48,111,19,74,35,-13,46,43,-90,-45,-70,10,-26,-83,-79,-22,-27,-1,0,17,-80,-67,41,77,112,31,66,112,23,34,-77,110,87,-116,-25,-118,-12,-87,31,39,91,-30,41,10,-77,17,-82,-106,115,50,-36,109,86,-48,-44,24,-56,-99,42,-52,117,72,-51,-106,18,-90,83,84,102,88,73,42,-36,109,76,-122,75,-100,-45,-59,4,18,6,-30,-105,52,-55,36,15,-118,120,124,-46,36,125,72,13,34,71,-44,110,104,17,22,106,54,52,-53,34,-35,72,90,-126,-120,89,-86,22,106,10,43,-71,-86,-18,104,52,69,73,106,-77,26,-125,84,64,-19,85,-92,53,6,-88,-83,37,65,-4,85,70,-24,-67,7,-54,-21,93,94,-101,-48,87,37,99,-43,-64,124,70,-62,-12,-91,53,-60,125,1,-25,-9,79,89,-13,73,-14,26,-12,-87,108,124,-91,117,-17,20,-42,-89,-114,-70,25,-54,-53,73,86,-94,-84,-52,-92,91,74,-103,78,42,-52,-119,-93,106,-100,83,32,-107,106,-52,109,84,67,38,13,82,-95,-30,-111,-104,-16,-43,32,52,-60,47,90,122,-102,9,38,13,78,13,72,-111,124,-54,99,61,48,-79,17,106,-115,-115,5,16,-106,-90,-77,-48,81,17,106,-119,-115,5,16,57,-86,-50,-44,-115,17,94,70,-86,-46,26,-122,106,-118,-82,-43,94,67,80,105,18,-76,-122,-94,31,122,-84,-24,70,-123,-80,-7,-41,53,-43,-23,-67,5,114,86,61,92,15,-60,108,45,56,-41,17,-17,30,121,121,89,-46,114,-89,-97,-46,-67,74,86,-79,-14,-75,-2,34,-88,62,-1,0,-91,76,-115,-17,-6,87,67,-79,-54,90,-115,-67,-22,-62,55,-67,103,-95,-109,76,-73,28,-107,48,106,90,25,-109,35,84,-22,-11,102,108,-107,94,-84,35,-45,32,-99,94,-90,86,-96,-127,-37,-87,-54,105,-110,74,13,56,53,4,-110,121,-108,-69,-24,16,-123,-87,-123,-24,1,-69,-23,-116,104,40,-123,-102,-93,45,72,-94,38,122,-123,-92,-96,-94,22,122,-127,-115,34,-56,28,-43,105,13,75,53,69,89,15,-25,85,-100,-97,90,-107,99,84,87,115,-17,76,67,-121,28,-42,-102,27,35,82,23,-35,34,-13,93,78,-101,-9,69,113,86,-79,-22,96,119,54,23,-91,56,-41,17,-17,30,113,122,121,-84,-9,-23,-59,122,116,-74,62,98,-65,-60,87,21,34,-41,65,-56,78,-115,83,43,-30,-77,100,-78,-44,77,86,-108,-46,48,100,-21,79,6,-103,36,-47,-102,-80,-89,21,68,18,-85,-44,-62,74,100,15,86,-87,-125,83,32,120,106,55,82,16,-95,-23,-31,-23,-120,11,-46,110,-92,3,55,-45,11,-48,50,6,106,-120,-67,50,-56,-39,-22,18,-43,37,17,-77,84,44,-44,-82,89,12,-113,85,93,-86,25,-94,43,-55,85,28,-43,35,120,-112,49,-92,95,-68,42,-115,17,-95,1,-60,-86,5,117,-38,103,-35,21,-57,88,-11,112,91,-101,11,78,53,-60,123,103,-101,-33,-73,53,-99,-66,-67,74,91,31,51,95,-30,43,-18,-26,-100,26,-70,14,91,19,-93,85,-120,-21,54,73,106,35,86,-108,-42,102,18,37,86,-87,20,-45,36,-99,90,-92,87,-85,51,37,86,-89,-122,-51,50,73,99,122,-104,61,50,9,3,82,-17,-96,66,111,-91,-13,41,-120,79,50,-109,-52,-92,49,11,83,75,82,25,17,108,-44,76,104,41,16,-77,84,44,-12,-117,35,102,-88,-35,-86,75,32,-111,-86,-69,53,73,72,-83,35,85,103,53,-92,77,-47,11,26,69,-5,-43,70,-88,-48,-73,-57,-100,-71,-82,-61,76,-5,-94,-72,-85,-98,-82,15,115,101,122,82,-102,-29,61,-109,-52,-75,51,-51,101,111,-81,90,-113,-62,124,-42,35,-30,27,-102,80,107,99,-104,-103,13,93,-119,-85,54,73,56,124,84,-47,-55,89,-103,73,22,21,-86,64,-44,-116,-103,32,106,-112,63,-25,84,-119,-79,42,62,106,69,53,68,19,43,84,-118,-12,-55,37,13,74,90,-126,68,45,77,-33,76,98,111,-93,125,32,13,-12,-58,122,0,-116,-67,49,-98,-111,68,14,-43,19,53,73,100,108,-43,3,-55,80,82,33,103,-88,29,-23,-102,-94,7,106,-82,-58,-75,70,-92,68,-46,41,-7,-86,-115,13,11,83,-103,-42,-69,61,51,-18,-118,-31,-82,122,-72,67,93,105,-58,-72,-49,96,-14,-3,89,-71,53,-111,-102,-11,-24,-81,116,-7,-84,71,-58,91,-75,-78,-110,115,-59,107,-37,-24,91,-70,-46,-99,78,-120,21,50,-61,104,28,124,-71,6,-86,73,97,52,29,-78,42,57,-52,-91,18,60,100,83,-111,90,-88,-25,100,-22,-60,117,-87,-43,-77,80,99,34,80,113,78,15,76,-126,100,108,-118,-112,62,42,-119,36,89,42,64,-12,-60,63,-52,-91,-13,105,-109,96,50,83,119,-45,0,-33,77,50,82,1,-98,101,33,-110,-112,-20,48,-67,70,-49,72,-95,-123,-22,38,122,-110,-120,36,-110,-85,-77,-48,104,-120,-39,-86,23,106,-93,68,68,-51,80,-109,90,-106,-122,19,66,31,-104,102,-126,-53,-10,-115,-2,-112,-75,-38,-23,-65,116,87,13,115,-42,-62,26,-53,78,53,-58,122,-57,-109,-22,-113,-106,-90,105,-74,-66,115,-41,-84,-97,45,51,-25,-28,-81,84,-20,116,-19,61,64,28,86,-44,112,42,10,-27,-71,-43,-56,76,-79,43,83,38,-79,93,-67,40,-71,-107,74,119,-119,-52,-21,86,98,47,-34,39,31,-34,21,-103,-68,98,-73,71,-107,-53,97,30,74,122,-55,65,13,19,44,-103,21,34,-102,70,100,-95,-79,78,13,-102,100,-114,15,79,89,41,-36,67,-9,-45,-125,-43,18,5,-87,67,80,32,103,-88,-73,-48,49,11,-46,111,-87,40,105,122,99,53,0,70,94,-94,103,-4,-22,74,33,99,80,-79,-4,-86,-115,17,19,53,66,77,104,89,25,52,-61,84,88,-62,105,23,-17,83,44,-65,102,127,-46,20,87,111,-90,-3,-47,92,21,-49,87,8,107,45,56,-41,33,-21,30,61,116,-2,100,-75,-47,104,86,-29,2,-67,58,-102,66,-57,-121,29,102,-50,-82,15,-111,106,-52,59,-90,125,-85,-42,-71,-46,52,-83,83,-110,38,-112,-45,-91,69,-35,81,-79,-7,112,106,37,-72,-80,-11,21,72,-100,-42,-70,-101,-93,106,-29,-61,-32,-41,77,35,-114,-68,108,-59,-35,79,86,-59,108,114,-40,-98,55,-26,-84,-121,-84,-52,-104,-32,-12,-3,-12,-120,23,125,56,61,2,31,-26,83,-124,-108,-55,-80,-17,50,-105,-52,-90,3,12,-108,-45,37,72,-20,48,-55,77,-33,69,-57,97,-90,74,97,-110,-127,-40,-115,-92,-88,-117,-45,46,-60,108,-11,17,122,-78,-47,25,53,25,106,-94,-122,102,-93,38,-84,-95,-92,-46,41,-26,-126,-117,-10,63,-15,-16,-75,-36,-23,-97,112,87,-97,95,115,-43,-62,26,-53,78,-82,83,-43,60,98,51,-103,70,107,-75,-47,62,-24,-81,79,16,120,120,115,-87,-73,-121,112,-83,11,56,-111,26,-71,-32,115,99,-18,104,-83,-58,-44,53,-119,44,-100,-102,115,-36,89,122,103,63,-84,-53,-5,-74,-82,59,57,115,-11,-85,-92,111,-120,36,-32,-118,85,-26,-73,56,-103,34,-100,84,-95,-86,76,-38,30,-83,79,-35,82,64,-86,-12,-3,-12,8,111,-103,79,87,-92,22,30,94,-109,-52,-96,64,94,-102,94,-128,-80,-52,-26,-101,-69,20,12,99,53,52,-67,50,-84,48,-65,21,17,106,-78,-122,22,-90,49,-86,25,17,52,-46,106,-118,24,-58,-104,77,80,-58,-102,88,-2,-11,54,82,-36,-65,98,127,-46,86,-69,-99,51,-18,-118,-13,-79,27,-98,-82,20,-42,90,-98,36,-35,92,-88,-12,-92,-12,60,81,120,53,-44,-24,119,61,43,-44,-81,-79,-30,97,-9,59,125,62,101,100,-85,82,30,56,-82,4,-20,-50,-86,-12,125,-94,32,82,-35,-51,87,-70,-108,34,-45,110,-20,-70,116,-71,32,114,122,-27,-41,-54,69,115,33,-15,93,-108,86,-121,5,119,-87,32,-110,-90,-116,-42,-84,-27,38,-89,6,-88,51,29,-26,83,-68,-54,9,-80,111,-59,46,-6,66,-80,-4,-47,-26,98,-92,5,-33,75,-66,-127,88,93,-12,-49,50,-104,-125,125,70,-51,65,72,-113,125,33,106,-85,20,68,90,-102,90,-84,99,75,83,9,-90,3,9,-92,-51,81,67,9,-90,83,24,-38,114,125,-22,108,-92,95,-80,63,-23,34,-69,-83,51,-18,-118,-13,107,-18,122,-72,99,89,106,-60,15,-74,-71,-111,-24,79,-31,60,96,1,86,109,110,13,-68,-125,-46,-67,89,46,100,120,81,118,103,83,-90,-21,35,3,-26,-83,-104,-11,85,35,-83,121,-46,-115,-113,70,50,-48,73,53,85,3,-83,99,-22,58,-73,7,-102,35,27,-123,73,-24,115,-110,-54,-9,114,113,87,-83,116,70,-101,-17,-41,101,-7,21,-113,63,-105,-99,-36,-41,-125,-61,-47,-29,-108,-87,127,-31,25,-115,-57,31,45,71,51,34,-92,44,102,-22,122,44,-10,9,-26,3,-26,71,-21,-23,89,5,-85,104,-69,-100,-117,81,115,70,-22,-95,-114,15,78,-35,72,67,-73,-46,110,-94,-64,27,-23,60,-54,44,2,-7,-108,-123,-24,-80,6,-22,105,106,0,102,105,-69,-87,-116,110,105,-103,-86,1,51,77,38,-88,99,115,77,-51,0,48,-102,105,53,67,27,-102,114,-102,25,72,-65,-89,127,-57,-54,-41,119,-90,-3,-47,94,109,125,-49,87,12,107,45,60,26,-26,71,-94,-49,29,13,75,-100,-41,-79,99,-25,-123,18,-76,103,-27,53,97,53,25,-57,122,-103,83,82,46,53,92,69,109,70,99,-34,-95,50,-68,-121,-102,74,-102,-120,-27,85,-49,67,-93,-47,44,122,49,21,-43,-38,-37,-86,-118,-28,-101,-44,-23,-124,75,127,32,-23,86,32,-38,70,42,46,42,-123,77,78,1,-27,55,-67,121,-2,-93,111,-10,107,-125,-113,-69,91,-45,122,-100,82,-89,98,-66,114,-75,22,107,-96,-59,-118,26,-105,117,2,23,117,25,-96,5,-51,55,52,0,110,-92,-35,64,-123,-33,73,-70,-104,-58,-26,-102,90,-128,27,-102,105,53,67,19,52,-46,105,-128,-36,-46,102,-104,13,-90,-48,49,-76,-28,63,53,54,52,104,105,-89,55,75,93,-26,-101,-9,69,121,-104,-115,-49,87,12,106,-83,45,114,-93,-46,60,110,-100,26,-67,-77,-26,-112,83,-106,-127,-113,61,41,-10,-125,116,-21,82,-10,46,43,-34,59,-67,34,33,-80,86,-76,-103,3,-118,-13,-114,-58,-20,-123,-73,-7,-70,-43,-97,-71,-51,104,-29,-95,-57,10,-73,-88,23,7,124,85,-59,-8,-123,0,57,-87,-89,-71,-41,85,24,-126,90,-118,67,-51,118,36,121,-52,102,-22,112,106,-78,71,6,-93,52,-122,55,117,46,-6,98,27,-70,-115,-44,0,-123,-87,51,64,1,106,76,-45,1,51,76,38,-128,19,52,-103,-90,49,-76,-107,64,38,105,-71,-96,4,-95,122,-48,50,-2,-104,127,-46,-106,-69,-3,51,-18,10,-13,-79,63,17,-22,-31,-74,53,69,6,-72,-49,68,-15,-38,74,-9,15,-101,22,-107,77,32,29,-70,-89,-78,109,-77,-118,-106,-76,52,-121,-60,119,-102,52,-93,104,-83,121,121,-81,59,-87,-35,37,120,17,35,-30,-92,45,-102,-43,-53,67,-49,-89,73,-5,75,-124,-49,-75,43,-113,-15,4,-69,-114,-38,-120,124,71,125,77,-116,112,-121,29,106,-68,-99,107,-75,30,115,16,26,92,-43,-103,-120,13,46,104,24,-103,-92,-51,0,25,-93,52,-20,2,102,-116,-45,16,-103,-93,52,-122,38,105,-71,-90,2,82,80,33,41,42,-122,54,-110,-128,18,-100,-76,-122,-115,13,44,127,-92,-118,-17,-76,-33,-70,43,-51,-60,124,71,-85,-122,-40,-44,20,87,33,-24,-98,59,69,123,-121,-51,5,20,8,117,61,119,33,6,-125,68,116,-38,53,-2,48,9,-82,-90,-34,-23,93,58,-41,-101,53,-17,30,-116,101,116,79,-63,-89,101,16,117,-84,-37,52,-116,18,50,-11,43,-27,85,60,-41,23,127,119,-26,-49,91,81,87,103,61,119,-96,-63,32,-86,-18,-39,106,-19,72,-32,99,115,75,-102,-94,4,-91,-96,2,-118,0,74,13,48,19,52,-108,-64,40,-51,0,37,37,0,54,-125,64,13,-51,20,-64,67,73,76,4,-89,45,33,-93,75,72,31,-23,34,-69,-3,59,-18,-118,-13,49,63,17,-22,-31,-74,52,-87,-90,-71,15,68,-15,-29,69,123,-121,-51,5,20,-60,61,42,108,-44,51,84,44,115,52,47,-112,107,102,-53,88,-38,58,-42,21,105,-33,84,111,78,93,13,68,-42,-122,62,-11,50,125,108,109,-5,-43,-53,-56,-50,-98,99,10,-1,0,83,105,-72,6,-77,43,-70,-108,57,81,-59,90,124,-52,118,-22,51,90,-104,6,105,51,76,65,-102,92,-46,0,-51,46,104,16,80,77,3,19,52,-36,-45,0,-51,25,-96,3,52,-38,98,19,52,-108,0,-108,83,16,-108,80,48,-89,-91,75,26,53,52,111,-8,-8,-82,-9,79,-5,-75,-26,98,62,35,-41,-61,108,104,82,26,-27,59,-49,30,-92,-81,112,-7,-96,-94,-104,14,20,-19,-44,-118,65,64,-96,68,-128,-80,-2,42,105,39,-42,-92,-67,70,-47,-46,-84,-128,-94,-127,5,45,2,10,40,0,-91,-96,64,41,40,24,-108,80,2,81,64,9,69,0,37,37,49,5,37,0,20,-108,-64,90,81,72,104,-42,-47,127,-29,-30,-69,-21,15,-70,43,-53,-60,-4,71,-81,-122,-40,-48,-90,26,-28,61,3,-1,-39";
        byte[] bphoto = conver2HexToByte(photo);

        String fileName = "/Users/yongchizhang/testphoto.jpg";
        File testimage = new File(fileName);
        if (testimage.exists()) {
            testimage.delete();
        }
        FileOutputStream fos = new FileOutputStream(testimage.getPath());
        fos.write(bphoto);
        fos.close();


        byte[] bb = hh.getBytes();
        String ddfd = conver2HexStr(bb);
        System.out.println(ddfd);
        for(int i=0;i<bb.length;i++)
            System.out.print(bb[i]);
        System.out.println();
        System.out.println();
        String sss=new String(bb);
        System.out.println(sss);
        System.out.println();
        System.out.println(bb.length);

        int[] arr = {1,2,5,6,6,6,6,6,8,10,10,10,10};
        int res = binary_search(arr,1);
        System.out.println(res);
        res = binSfirst(arr,6);
        System.out.println(res);
        res = binSfirst(arr,1);
        System.out.println(res);
        res = binSlast(arr,6);
        System.out.println(res);

        int[] nums1 = {1,2}; int[] nums2 = {3,4};
        LinkedList<Integer> l = new LinkedList<Integer>();
        l.add(8);
        l.add(9);
        System.out.println(l.size());
        System.out.println(BinarySearchPerfectSquare.Sqrt2(9.9));
        System.out.println(BinarySearchPerfectSquare.Sqrt3(125));
        System.out.println(Integer.MIN_VALUE);
        //System.out.println(Twoarray.findMedianSortedArrays(nums1,nums2));
        //int[] nums3 = intersect(nums1,nums2);

    }
    public int[] twoSum(int[] numbers, int target){
        int[] result = new int[2];
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        for(int i=0; i<numbers.length; i++){
            if(map.containsKey(target - numbers[i])){
                result[1]=i+1;
                result[0]=map.get(target - numbers[i]);
                return result;
            }
            map.put(numbers[i], i+1);
        }
        return result;
    }

    static int binary_search(int[] arr, int x){
        if(arr.length==0){
            return -1;
        }
        int low = 0, high = arr.length -1;
        while(low<=high){
            int mid = low + (high - low)/2;
            if(arr[mid]<x){
                low = mid + 1;
            }else if(arr[mid]>x){
                high = mid - 1;
            }else{
                return mid;
            }
        }
        return -1;
    }

    static int binSfirst(int[] arr, int x){
        if(arr.length ==0){
            return -1;
        }
        int low = 0, high = arr.length - 1;
        while(low < high){
            int mid = low + (high - low)/2;
            if(arr[mid]<x){
                low = mid + 1;
            }else if(arr[mid]>x){
                high = mid - 1;
            }else{
                high = mid;
            }
        }
        if(arr[high]==x){
            return high;
        }
        return -1;
    }

    static int binSlast(int[] arr, int x){
        if(arr.length == 0){
            return -1;
        }
        int low = 0, high = arr.length - 1;
        while(low+1 < high){
            int mid = low + (high - low)/2 ;
            if(arr[mid]<x){
                low = mid + 1;
            }else if(arr[mid]>x){
                high = mid - 1;
            }else{
                low = mid;
            }
        }
        if(arr[high]== x){
            return high;
        }else if(arr[low]==x){
            return low;
        }
        return -1;
    }
    public static String conver2HexStr(byte [] b)
    {
        StringBuffer result = new StringBuffer();
        for(int i = 0;i<b.length;i++)
        {
            result.append(b[i]+",");
        }
        return result.toString();
    }

    /**
     * 二进制字符串转换为byte数组,每个字节以","隔开
     * **/
    public static byte[] conver2HexToByte(String hex2Str)
    {
        String [] temp = hex2Str.split(",");
        byte [] b = new byte[temp.length];
        for(int i = 0;i<b.length;i++)
        {
            b[i] = Byte.parseByte(temp[i]);
            //b[i] = Long.valueOf(temp[i], 2).byteValue();
        }
        return b;
    }


}
